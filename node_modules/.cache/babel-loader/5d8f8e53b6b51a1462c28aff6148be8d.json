{"ast":null,"code":"var _jsxFileName = \"/Users/subhamsaha/Dev-Files/React-Practice/react-rmdb-finished-classes/src/components/SearchBar/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Image\n\nimport searchIcon from \"../../images/search-icon.svg\"; // Styles\n\nimport { Wrapper, Content } from './SearchBar.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n    this.timeout = null;\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (this.state.value !== prevState.value) {\n      const {\n        setSearchTerm\n      } = this.props;\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        const {\n          value\n        } = this.state;\n        setSearchTerm(value);\n      }, 500);\n    }\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          alt: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Movie\",\n          onChange: event => this.setState({\n            value: event.currentTarget.value\n          }),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\nexport default SearchBar;","map":{"version":3,"sources":["/Users/subhamsaha/Dev-Files/React-Practice/react-rmdb-finished-classes/src/components/SearchBar/index.js"],"names":["React","Component","PropTypes","Wrapper","Content","SearchBar","state","value","timeout","componentDidUpdate","_prevProps","prevState","setSearchTerm","props","clearTimeout","setTimeout","render","searchIcon","event","setState","currentTarget","propTypes","callback","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;uDAEA;;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,oBAAjC;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADwB;AAAA,SAEhCC,OAFgC,GAEtB,IAFsB;AAAA;;AAIhCC,EAAAA,kBAAkB,CAACC,UAAD,EAAaC,SAAb,EAAwB;AACxC,QAAI,KAAKL,KAAL,CAAWC,KAAX,KAAqBI,SAAS,CAACJ,KAAnC,EAA0C;AACxC,YAAM;AAAEK,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AAEAC,MAAAA,YAAY,CAAC,KAAKN,OAAN,CAAZ;AAEA,WAAKA,OAAL,GAAeO,UAAU,CAAC,MAAM;AAC9B,cAAM;AAAER,UAAAA;AAAF,YAAY,KAAKD,KAAvB;AACAM,QAAAA,aAAa,CAACL,KAAD,CAAb;AACD,OAHwB,EAGtB,GAHsB,CAAzB;AAID;AACF;;AAEDS,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEW,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEW,KAAK,CAACE,aAAN,CAAoBb;AAA7B,WAAd,CAHrB;AAIE,UAAA,KAAK,EAAEA;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlC+B;;AAqClCF,SAAS,CAACgB,SAAV,GAAsB;AACpBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AADA,CAAtB;AAIA,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// Image\nimport searchIcon from '../../images/search-icon.svg';\n// Styles\nimport { Wrapper, Content } from './SearchBar.styles';\n\nclass SearchBar extends Component {\n  state = { value: '' };\n  timeout = null;\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (this.state.value !== prevState.value) {\n      const { setSearchTerm } = this.props;\n\n      clearTimeout(this.timeout);\n\n      this.timeout = setTimeout(() => {\n        const { value } = this.state;\n        setSearchTerm(value);\n      }, 500);\n    }\n  }\n\n  render() {\n\n    const { value } = this.state;\n\n    return (\n      <Wrapper>\n        <Content>\n          <img src={searchIcon} alt='search-icon' />\n          <input\n            type='text'\n            placeholder='Search Movie'\n            onChange={event => this.setState({ value: event.currentTarget.value })}\n            value={value}\n          />\n        </Content>\n      </Wrapper>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}